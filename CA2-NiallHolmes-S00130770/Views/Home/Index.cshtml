@using System.Data
@model IEnumerable<CA2_NiallHolmes_S00130770.Models.Movie>

<div class="container">
@{
    ViewBag.Title = "Index";
}
<div class="panel panel-success">
    <div class="panel-heading">
        <div class="lead">Movies</div>
            @Html.ActionLink("Add", "Create",null,new {@class = "btn btn-success"})
</div>


<table class="table table-striped">
    <tr>
        <th>
@*            <a class="btn btn-xs btn-info" href="@Url.Action("Index", new { sortOrder = @ViewBag.NameSortParm })">*@
@*            @Html.ActionLink("Movie Name", "Index", new { sortOrder = ViewBag.NameSortParm })*@
             <a class="btn btn-sm btn-warning" href="@Url.Action("Index", new { sortOrder = @ViewBag.NameSortParm })">
                            @if (ViewBag.NameSortParm == "name_desc")
                            {
                                <span class="glyphicon glyphicon-arrow-down" aria-hidden="true"></span>
                            }
                            else if (ViewBag.NameSortParm == "")
                            {
                                <span class="glyphicon glyphicon-arrow-up" aria-hidden="true"></span>
                            }
                            &nbsp;Movie Name
                 </a>
@*            @Html.DisplayNameFor(model => model.MovieName)*@
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre)
        </th>
        <th></th>
    </tr>

@*@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.MovieName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Genre)
        </td>
       
        <td>
            @Html.ActionLink("Details", "Details", new { id=item.MovieID },new {@class = "btn btn-warning"})
            @Html.ActionLink("Edit", "Edit", new { id=item.MovieID },new {@class = "btn btn-primary"})
            @Html.ActionLink("Delete", "Delete", new { id=item.MovieID },new {@class = "btn btn-danger"})
        </td>
    </tr>
}*@

     @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <span class="btn btn-sm btn-info" onclick="showActors('@item.MovieID')">@Html.DisplayFor(modelItem => item.MovieName)</span>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Genre)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.MovieID }, new { @class = "btn btn-info btn-sm" })
                            @Html.ActionLink("Details", "Details", new { id = item.MovieID }, new { @class = "btn btn-info btn-sm" })
                            @Html.ActionLink("Delete", "Delete", new { id = item.MovieID }, new { @class = "btn btn-danger btn-sm" })
                        </td>
                    </tr>
                }

</table>
            
        </div>
    <div  id="Detail"> 
            </div>
    </div>
<div>
     <H2 style="margin-left:570px">Genre Split</H2>  
     <canvas id="GenreSplitChart" style="margin-left:500px"> </canvas>
    <label style="color:#0B610B"> Action</label>
    <label style="color:#00FFFF"> Animation </label>   
    <label style="color:#DF0101"> Comedy </label>  
    <label style="color:#B40486"> Crime </label>            
    <label style="color:#08088A"> Drama </label>  
    <label style="color:#FDB45C"> Horror </label>
    <label style="color:#000000"> Romance </label>      
    </div>
         
        
@section scripts
{
    <script>

        $(function () { // ready event
            toastr.info('Here is a list  of movies');
        });//end

     
        // partial view showing actors in film
        function showActors(movieID) {
            $.ajax({
                url: '@Url.Action("ActorsById")',
                data: { id: movieID },
                success: function (data) {
                    $('#Detail').hide();
                    $('#Detail').html(data);
                    $('#Detail').fadeIn();
                },
                error: function (data) { $('#Details').html('<h3>Error in retrieval</h3>'); }
            });
        }//end



        $(function () {      // ready event
            var ctx = $("#GenreSplitChart").get(0).getContext("2d");
            var olddata = [
                {
                    value:@(ViewBag.GenreComedy),
                    color: "#DF0101",
                    highlight: "#FF5A5E",
                    label: "Red"
                },
                {
                    value: @(ViewBag.GenreAction),
                    color: "#0B610B",
                    highlight: "#5AD3D1",
                    label: "Green"
                },
                {
                    value: @(ViewBag.GenreHorror),
                    color: "#FDB45C",
                    highlight: "#FFC870",
                    label: "Yellow"
                },
                {
                    value: @(ViewBag.GenreCrime),
                    color: "#B40486",
                    highlight: "#FFC870",
                    label: "Purple"
                },
                 {
                     value: @(ViewBag.GenreDrama),
                     color: "#08088A",
                     highlight: "#FFC870",
                     label: "Blue"
                 },
                  {
                      value: @(ViewBag.GenreRomance),
                      color: "#000000",
                      highlight: "#FFC870",
                      label: "Black"
                  },
                  {
                      value: @(ViewBag.GenreAnimation),
                      color: "#00FFFF",
                      highlight: "#FFC870",
                      label: "Aqua"
                  },
           
            ];
            var data = {
                //Boolean - Whether to show lines for each scale point
                scaleShowLine : true,

                //Boolean - Whether we show the angle lines out of the radar
                angleShowLineOut : true,

                //Boolean - Whether to show labels on the scale
                scaleShowLabels : false,

                // Boolean - Whether the scale should begin at zero
                scaleBeginAtZero : true,

                //String - Colour of the angle line
                angleLineColor : "rgba(0,0,0,.1)",

                //Number - Pixel width of the angle line
                angleLineWidth : 1,

                //String - Point label font declaration
                pointLabelFontFamily : "'Arial'",

                //String - Point label font weight
                pointLabelFontStyle : "normal",

                //Number - Point label font size in pixels
                pointLabelFontSize : 10,

                //String - Point label font colour
                pointLabelFontColor : "#666",

                //Boolean - Whether to show a dot for each point
                pointDot : true,

                //Number - Radius of each point dot in pixels
                pointDotRadius : 3,

                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth : 1,

                //Number - amount extra to add to the radius to cater for hit detection outside the drawn point
                pointHitDetectionRadius : 20,

                //Boolean - Whether to show a stroke for datasets
                datasetStroke : true,

                //Number - Pixel width of dataset stroke
                datasetStrokeWidth : 2,

                //Boolean - Whether to fill the dataset with a colour
                datasetFill : true,

                //String - A legend template
                legendTemplate : "<ul class=\"<%=name.toLowerCase()%>-legend\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\"background-color:<%=datasets[i].lineColor%>\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>"

            };
            var chart = new Chart(ctx).Pie(olddata,data);

        });

    </script>
}
